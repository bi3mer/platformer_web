class E{scenes={};registerScene(X,F){if(this.scenes[X]===void 0)this.scenes[X]=F;else console.error(`Key "${X}" for scene already exists! Scene not added to SceneManager.`)}getScene(X){return this.scenes[X]}}class S{changeScene;onExit(){this.changeScene=void 0,this._onExit()}}var x="main menu",M="game",_="player won";var j=720,O=480,b=32,u=15,JX=17,ZX=20,VX=30,BX=0.625,kX=0.9375,zX=31,wX=31,vX=0.96875,UX=0.96875,WX=16,LX=16,jX=0.5,OX=0.5,K=25,h=15,G=0.78125,d=0.46875,R="start",T="end",w="death";var B;(function(V){V[V["LEFT"]=0]="LEFT";V[V["RIGHT"]=1]="RIGHT";V[V["DOWN"]=2]="DOWN";V[V["UP"]=3]="UP";V[V["A"]=4]="A";V[V["D"]=5]="D";V[V["E"]=6]="E";V[V["G"]=7]="G";V[V["H"]=8]="H";V[V["I"]=9]="I";V[V["Q"]=10]="Q";V[V["R"]=11]="R";V[V["S"]=12]="S";V[V["W"]=13]="W";V[V["SPACE"]=14]="SPACE";V[V["ESCAPE"]=15]="ESCAPE";V[V["ENTER"]=16]="ENTER";V[V["SHIFT"]=17]="SHIFT";V[V["INVALID"]=18]="INVALID"})(B||(B={}));class v{static _keys=[];static init(){for(let X=0;X<Object.keys(B).length;++X)v._keys.push(!1);window.addEventListener("keydown",v.onKeyDown),window.addEventListener("keyup",v.onKeyUp)}static isKeyDown(...X){const F=X.length;for(let q=0;q<F;++q)if(v._keys[X[q]])return!0;return!1}static keyStrToKey(X){switch(X){case"Down":case"ArrowDown":return B.DOWN;case"Up":case"ArrowUp":return B.UP;case"Right":case"ArrowRight":return B.RIGHT;case"Left":case"ArrowLeft":return B.LEFT;case" ":case"Space":return B.SPACE;case"Escape":return B.ESCAPE;case"a":case"A":return B.A;case"e":case"E":return B.E;case"s":case"S":return B.S;case"d":case"D":return B.D;case"w":case"W":return B.W;case"r":case"R":return B.R;case"q":case"Q":return B.Q;case"g":case"G":return B.G;case"h":case"H":return B.H;case"i":case"I":return B.I;case"Shift":return B.SHIFT;case"Enter":return B.ENTER;default:return console.warn(`Unhandled key: ${X}.`),B.INVALID}}static onKeyDown(X){const F=v.keyStrToKey(X.key);if(v._keys[F]=!0,F==B.DOWN||F==B.UP||F==B.LEFT||F==B.RIGHT)X.preventDefault();return!1}static onKeyUp(X){return v._keys[v.keyStrToKey(X.key)]=!1,!1}static clear(){for(let X=0;X<v._keys.length;++X)v._keys[X]=!1}}class l extends S{ctx;constructor(X){super();this.ctx=X}onEnter(){this.ctx.clearRect(0,0,j,O),this.ctx.fillStyle="white",this.ctx.font="48px Arial",this.ctx.fillText("Recformer",247,100),this.ctx.font="30px Arial",this.ctx.fillText("Press 'space' to start",220,O*0.6)}update(X){if(v.isKeyDown(B.SPACE))this.changeScene=M}render(){}_onExit(){}}class c{startCol=0;endCol=0;offsetX=0;colsPerScreen=Math.ceil(j/b);update(X){const F=X-this.colsPerScreen/2;this.startCol=Math.max(0,Math.floor(F)),this.endCol=this.startCol+this.colsPerScreen,this.offsetX=-F*b+this.startCol*b}columnToScreen(X){return(X-this.startCol)*b+this.offsetX}rowToScreen(X){return X*b}}class C{x;y;constructor(X,F){this.x=X,this.y=F}copy(){return new C(this.x,this.y)}zero(){this.x=0,this.y=0}equals(X){return this.x==X.x&&this.y==X.y}add(X){return new C(this.x+X.x,this.y+X.y)}addInPlace(X){this.x+=X.x,this.y+=X.y}subtract(X){return new C(this.x-X.x,this.y-X.y)}subtractInPlace(X){this.x-=X.x,this.y-=X.y}scalarAdd(X){this.x+=X,this.y+=X}scalarSubtract(X){this.x-=X,this.y-=X}scalarMultiply(X){return new C(this.x*X,this.y*X)}scalarMultiplyInPlace(X){this.x*=X,this.y*=X}dot(X){return this.x*X.x+this.y+X.y}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}}function RX(X,F,q,Q){const{x:$,y:J}=X,f=$+F.x,k=J+F.y,z=q.x,W=q.y,A=z+Q.x,Y=W+Q.y;return $<A&&f>z&&J<Y&&k>W}class L{pos;size;type;dead=!1;velocity=new C(0,0);gravity=new C(0,100);constructor(X,F,q,Q,$){this.pos=new C(X,F),this.size=new C(q,Q),this.type=$}collision(X){if(RX(this.pos,this.size,X.pos,X.size))this.handleCollision(X),X.handleCollision(this)}physicsUpdate(X){this.velocity.addInPlace(this.gravity.scalarMultiply(X)),this.velocity.y=Math.min(this.velocity.y,30),this.pos.addInPlace(this.velocity.scalarMultiply(X))}}var g=0,H=1,p=2,P=3;var CX=6,AX=8,IX=0.4;class m extends L{movingRight=!1;movingLeft=!1;moveMod=0;jumpTime=0;squash=1;stretch=1;coinsCollected=0;maxColumn=0;constructor(X,F){super(X,F,BX,kX,g)}update(X){if(this.pos.y>JX){this.dead=!0,console.log("Player fell...");return}if(this.velocity.x=0,v.isKeyDown(B.D,B.RIGHT))this.movingRight=!0,this.velocity.x=CX,this.moveMod=Math.min(AX,this.moveMod+X);if(v.isKeyDown(B.A,B.LEFT))if(this.movingRight)this.movingRight=!1,this.velocity.x=0;else this.movingLeft=!0,this.velocity.x=-CX,this.moveMod=Math.min(AX,this.moveMod+X);if(this.jumpTime<IX&&v.isKeyDown(B.SPACE,B.UP)){if(this.jumpTime===0)this.velocity.y=-15;else if(this.jumpTime<0.2)this.velocity.y-=2;this.squash=Math.min(1.03,this.squash+0.01),this.stretch=Math.max(0.97,this.stretch-0.01),this.jumpTime+=X}else if(this.squash!=this.stretch)this.squash+=0.01,this.stretch-=0.01;this.maxColumn=Math.max(this.pos.x,this.maxColumn)}handleCollision(X){switch(X.type){case H:{const F=this.pos.add(this.size.scalarMultiply(0.5)),q=X.pos.add(X.size.scalarMultiply(0.5)),Q=F.subtract(q);this.size.add(X.size).scalarMultiply(0.5);const J=Math.abs(Math.atan(Q.y/Q.x));if(!(J<0.96&&J>0.698)&&Math.abs(Q.x/this.size.x)>Math.abs(Q.y/this.size.y))if(Q.x<0)this.pos.x=X.pos.x-this.size.x;else this.pos.x=X.pos.x+X.size.x;else if(Q.y>0)this.pos.y=X.pos.y+X.size.y;else this.pos.y=X.pos.y-this.size.y,this.velocity.y=0,this.jumpTime=0,this.stretch=1.01,this.squash=0.99;break}case p:{++this.coinsCollected;break}case P:{this.dead=!0,console.log("Ran into an enemy! :/");break}default:{console.warn(`Player unhandled collision type: ${X.type}.`);break}}}render(X,F){X.fillStyle="rgba(150,150,255,1)";const q=F.columnToScreen(this.pos.x),Q=F.rowToScreen(this.pos.y),$=VX*this.squash,J=ZX*this.stretch;if(this.movingRight){let f=new Path2D;f.moveTo(q,Q),f.lineTo(q-this.moveMod,Q+$),f.lineTo(q+J-this.moveMod,Q+$),f.lineTo(q+J,Q),f.closePath(),X.fill(f,"evenodd"),this.movingRight=!1}else if(this.movingLeft){let f=new Path2D;f.moveTo(q,Q),f.lineTo(q+this.moveMod,Q+$),f.lineTo(q+J+this.moveMod,Q+$),f.lineTo(q+J,Q),f.closePath(),X.fill(f,"evenodd"),this.movingLeft=!1}else X.fillRect(q,Q,J,$)}}class r extends L{constructor(X,F){super(X,F,vX,UX,H)}update(X){}handleCollision(X){}render(X,F){X.strokeStyle="white",X.strokeRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),zX,wX)}}class n extends L{minY;maxY;yMod;constructor(X,F){super(X+0.25,F+0.25,jX,OX,p);this.gravity.y=0,this.yMod=Math.random()*0.5,this.maxY=F+0.3,this.minY=F+0.15,this.velocity.y=this.yMod}update(X){if(this.pos.y>=this.maxY)this.velocity.y=-this.yMod;else if(this.pos.y<=this.minY)this.velocity.y=this.yMod}handleCollision(X){if(X.type===g)this.dead=!0}render(X,F){X.fillStyle="yellow",X.fillRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),WX,LX)}}class i extends L{maxColumns;constructor(X,F,q){super(X+0.25,F+0.25,G,d,P);this.velocity.x=3,this.gravity.y=0,this.maxColumns=q}update(X){if(this.pos.x<0||this.pos.x>this.maxColumns)this.velocity.x*=-1}handleCollision(X){if(X.type===H){const F=this.pos.add(this.size.scalarMultiply(0.5)),q=X.pos.add(X.size.scalarMultiply(0.5)),Q=F.subtract(q);if(this.size.add(X.size).scalarMultiply(0.5),Math.abs(Q.x/this.size.x)>Math.abs(Q.y/this.size.y))if(this.velocity.x*=-1,Q.x<0)this.pos.x=X.pos.x-this.size.x;else this.pos.x=X.pos.x+X.size.x}}render(X,F){X.fillStyle="red",X.fillRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),K,h)}}class o extends L{constructor(X,F){super(X,F+0.1,d,G,P);this.velocity.y=3,this.gravity.y=0,this.pos.x+=0.25}update(X){if(this.pos.y<0||this.pos.y>=u)this.velocity.y*=-1}handleCollision(X){if(X.type===H){const F=this.pos.add(this.size.scalarMultiply(0.5)),q=X.pos.add(X.size.scalarMultiply(0.5)),Q=F.subtract(q);if(this.size.add(X.size).scalarMultiply(0.5),Math.abs(Q.x/this.size.x)<Math.abs(Q.y/this.size.y))if(this.velocity.y*=-1,Q.y>0)this.pos.y=X.pos.y+X.size.y;else this.pos.y=X.pos.y-this.size.y}}render(X,F){X.fillStyle="red",X.fillRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),h,K)}}class t{src;tgt;probability;constructor(X,F,q){this.src=X,this.tgt=F,this.probability=q}}class N{name;reward;utility;isTerminal;neighbors;constructor(X,F,q,Q,$){this.name=X,this.reward=F,this.utility=q,this.isTerminal=Q,this.neighbors=$}}class s{nodes;edges;constructor(){this.nodes={},this.edges={}}getNode(X){return this.nodes[X]}hasNode(X){return X in this.nodes}addNode(X){this.nodes[X.name]=X}addDefaultNode(X,F=1,q=0,Q=!1,$=null){if($==null)$=[];this.nodes[X]=new N(X,F,q,Q,$)}removeNode(X){const F=[];for(let q of Object.values(this.edges)){if(q.src==X||q.tgt==X)F.push(q);const Q=q.probability;let $=-1;for(let z=0;z<Q.length;z++){const[W,A]=Q[z];if(W==X){$=z;break}}if($==-1)continue;const J=Q[$][1];Q.splice($,1);const f=Q.length,k=J/f;q.probability=Q.map(([z,W])=>[z,W+k])}for(let q of F)this.removeEdge(q.src,q.tgt);delete this.nodes[X]}getEdge(X,F){return this.edges[`${X},${F}`]}hasEdge(X,F){return`${X},${F}`in this.edges}addEdge(X){this.edges[`${X.src},${X.tgt}`]=X;const F=this.nodes[X.src].neighbors;if(!F.includes(X.tgt))F.push(X.tgt)}addDefaultEdge(X,F,q=null){if(q==null)q=[[F,1]];this.addEdge(new t(X,F,q))}removeEdge(X,F){const q=this.nodes[X],Q=q.neighbors.indexOf(F);q.neighbors.splice(Q,1),delete this.edges[`${X},${F}`]}neighbors(X){return this.nodes[X].neighbors}setNodeUtilities(X){for(let[F,q]of Object.entries(X))this.nodes[F].utility=q}utility(X){return this.nodes[X].utility}reward(X){return this.nodes[X].reward}isTerminal(X){return this.nodes[X].isTerminal}mapNodes(X){for(let F of Object.values(this.nodes))X(F)}mapEdges(X){for(let F of Object.values(this.edges))X(F)}}function I(X){return X[Math.floor(Math.random()*X.length)]}function D(X,F,q,Q){const $=X.getEdge(F,q).probability,J=$.length;let f=0;for(let k=0;k<J;++k){const[z,W]=$[k];f+=W*(X.reward(z)+Q*X.utility(z))}return f}function y(X,F,q){const Q=X.getNode(F);if(Q.isTerminal)return 0;const $=Q.neighbors,J=$.length;let f=(-Infinity);for(let k=0;k<J;++k)f=Math.max(f,D(X,F,$[k],q));return f}function a(X){for(let F in X.nodes)X.nodes[F].utility=0}function e(X){const F={};for(let q in X.nodes)if(!X.getNode(q).isTerminal)F[q]=[...X.neighbors(q)];return F}function XX(X,F){const q={};for(let Q in X.nodes){if(X.getNode(Q).isTerminal)continue;let $=(-Infinity),J=[];for(let f of X.neighbors(Q)){const k=D(X,Q,f,F);if(k===$)J.push(f);else if(k>$)$=k,J.length=0,J.push(f)}q[Q]=J}return q}var SX=function(X,F,q,Q){for(let $=0;$<Q;++$)for(let J in X.nodes){const f=X.getNode(J);if(!f.isTerminal)f.utility=D(X,J,I(F[J]),q)}},uX=function(X,F,q,Q){for(let $=0;$<Q;++$){const J={};for(let f in X.nodes)if(!X.getNode(f).isTerminal)J[f]=D(X,f,I(F[f]),q);X.setNodeUtilities(J)}},xX=function(X,F,q,Q){for(let $=0;$<Q;++$)for(let J in X.nodes)X.getNode(J).utility=y(X,J,q)},bX=function(X,F,q,Q){for(let $=0;$<Q;++$){const J={};for(let f in X.nodes)J[f]=y(X,f,q);X.setNodeUtilities(J)}},YX=function(X,F,q){let Q=!1;for(let $ in X.nodes){if(X.getNode($).isTerminal)continue;let J=null,f=(-Infinity);for(let k of X.neighbors($)){const z=D(X,$,k,q);if(z===f);else if(z>f)J=k,f=z}if(I(F[$])!==J)F[$].length=0,F[$].push(J),Q=!0}return Q};function FX(X,F,q=!1,Q=!1,$=10,J=!0){if(J)a(X);const f=e(X);let k;if(q&&Q)k=SX;else if(q&&!Q)k=uX;else if(!q&&Q)k=xX;else k=bX;let z=!0;while(z)k(X,f,F,$),z=YX(X,f,F);return k(X,f,F,$),YX(X,f,F),XX(X,F)}class U extends N{visitedCount;sumPercentCompleted;designerReward;playerReward;constructor(X,F,q,Q,$){super(X,F,q,Q,$);this.designerReward=F,this.playerReward=0,this.visitedCount=1,this.sumPercentCompleted=1}updateReward(){this.reward=this.designerReward*this.visitedCount}}var Z=new s;Z.addNode(new U(R,0,0,!1,[]));Z.addNode(new U(w,-1,0,!0,[]));Z.addNode(new U(T,1,0,!0,[]));Z.addNode(new U("4-b",-0.5454545454545454,0,!1,[]));Z.addNode(new U("2-b",-0.7272727272727273,0,!1,[]));Z.addNode(new U("3-b",-0.6363636363636364,0,!1,[]));Z.addNode(new U("4-a",-0.5454545454545454,0,!1,[]));Z.addNode(new U("3-a",-0.6363636363636364,0,!1,[]));Z.addNode(new U("2-a",-0.7272727272727273,0,!1,[]));Z.addNode(new U("1-a",-0.8181818181818182,0,!1,[]));Z.addNode(new U("5-c",-0.45454545454545453,0,!1,[]));Z.addNode(new U("5-a",-0.45454545454545453,0,!1,[]));Z.addNode(new U("5-b",-0.45454545454545453,0,!1,[]));Z.addNode(new U("6-a",-0.2727272727272727,0,!1,[]));Z.addNode(new U("7-a",-0.18181818181818182,0,!1,[]));Z.addDefaultEdge("4-b","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("4-b","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("4-b","5-c",[["5-c",0.99],[w,0.01]]);Z.addDefaultEdge("2-b","3-a",[["3-a",0.99],[w,0.01]]);Z.addDefaultEdge("3-b","4-a",[["4-a",0.99],[w,0.01]]);Z.addDefaultEdge("3-b","4-b",[["4-b",0.99],[w,0.01]]);Z.addDefaultEdge("4-a","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("4-a","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("4-a","5-c",[["5-c",0.99],[w,0.01]]);Z.addDefaultEdge("3-a","4-a",[["4-a",0.99],[w,0.01]]);Z.addDefaultEdge("3-a","4-b",[["4-b",0.99],[w,0.01]]);Z.addDefaultEdge("2-a","3-b",[["3-b",0.99],[w,0.01]]);Z.addDefaultEdge(R,"1-a",[["1-a",0.99],[w,0.01]]);Z.addDefaultEdge("1-a","2-a",[["2-a",0.99],[w,0.01]]);Z.addDefaultEdge("1-a","2-b",[["2-b",0.99],[w,0.01]]);Z.addDefaultEdge("5-c","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-c","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("5-c","6-a",[["6-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-a","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("5-a","5-c",[["5-c",0.99],[w,0.01]]);Z.addDefaultEdge("5-a","6-a",[["6-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-b","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-b","6-a",[["6-a",0.99],[w,0.01]]);Z.addDefaultEdge("6-a","7-a",[["7-a",0.99],[w,0.01]]);Z.addDefaultEdge("7-a","end",[["end",0.99],[w,0.01]]);var HX={"4-b":["--------------------XX","--------------------XX","--------------------XX","--------------------XX","--------------------XX","-----------X-H---o--XX","-----------------o--XX","---------o----------XX","-----------XXXXXXX--XX","--------------------XX","-------X------------XX","------XXX-----------XX","-----XXXXX-----------o","----XXXXXXX-----------","XXXXXXXXXXXXXXXX--XXXX"],"2-b":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","-----------o----------","--------------------o-","-----X---H-----X------","XXXXXXXXXXXXXXXXXXXXXX"],"3-b":["----------------------","----------------------","----------------------","----------------------","----------o-----------","----------------------","--------XXXXX---------","--------V---V---------","----------o-----------","----------------------","------XXXXXXXXX-------","----------------------","----------o---------o-","-----X---H-----X------","XXXXXXXXXXXXXXXXXXXXXX"],"4-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------XXX---","-----------------V----","-------X---XX-----V---","------XX------o-V---o-","-----XXX--------------","XXXXXXXX---XXXXXXXXXXX"],"3-a":["----------------------","----------------------","----------------------","----------------------","----------o-----------","----------------------","--------XXXXX---------","----------o-----------","----------------------","-------X-H----X-------","-------XXXXXXXX--XX---","----------------------","-------V--o---V-----o-","----------------------","XXXXXXXXXXXXXXXXXXXXXX"],end:["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----oooooooooooooooooo","XXXXXXXXXXXXXXXXXXXXXX"],"2-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","-------XXXXXXXX-------","----------------------","-------V--o---V-----o-","----------------------","XXXXXXXXXXXXXXXXXXXXXX"],"1-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","--------------X-------","-----o-----o--X------o","XXXXXXXXXXXXXXXXXXXXXX"],"5-c":["0-----------------------------","------------------------------","X---XX------------------------","------------------------------","--------XX--------------------","XX----------------------------","--------XXXXX-----------------","--------Xoo-------------------","XXX-----Xoo----o------------o-","--------X---------------------","--------XXX---XX----XX----XXXX","XXXX--------------------------","------------------------------","------------------------------","XXXXXXXX----------------------"],"5-a":["--------XXXXXXXXXXXXXX--------","-------------------ooX--------","---------------------X--------","---------------------X--------","------------------XXXX--------","------------------X-----------","-----------o--XXXXX-----------","------------------------------","---------XX-----------------o-","------------------------------","--------------XX---XXX----XXXX","------------------------------","----------XX------------------","------------------------------","XXXXXXXX----------------------"],"5-b":["------------------------------","-o----------------------------","------------------------------","XXX---------------------------","------------------------------","-----XXX----------------------","------------------------------","-----------XXX----------------","-o--------------------------o-","------XXX---------------------","XXX-----------------------XXXX","------------XXX-------XX------","------------------XX----------","------------------------------","XXXXXXXX---XXXXX--------------"],"6-a":["----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","-------oo---XXXXXXXX----------","-o----------XXXXXXXX----------","------XXXX--XXXXXXXX----------","--------------o---------------","XXXX--------------------------","-------------XXXX-----------o-","---------------------XX-------","XXXXXXXX-----------------XXXXX"],"7-a":["-------------------V---------------","-----------------o---o-------------","------------X-H------------H--XXX--","-----V------XXXXXXXXXXXXXXXXXXXXX--","--------XX----o--------------------","-----------------------------------","-----------XXXXXX---Ho-------------","-----------------------------------","-------------V------XX--------H----","-----------------------------------","XX--------o------XXXXX----H--------","-----------------------------------","---X----H----H-X-----------------o-","---XXXXXXXXXXXXX-------------------","XXXX--------------------------XXXXX"]};class qX{playerIsOnLastLevel=!1;keys;columnsPerLevel;lossesInARow=0;playerWonLastRound=!1;constructor(){}update(X,F){const q=this.keys.length,Q=[];if(X){for(let J=0;J<q;++J)Q.push(1);this.lossesInARow=0}else{let J=F;for(let f=0;f<q;++f)if(J>this.columnsPerLevel[f])Q[f]=1,J-=this.columnsPerLevel[f];else{Q[f]=J/this.columnsPerLevel[f];break}}const $=Q.length;for(let J=0;J<$;++J){const f=Q[J],k=this.keys[J],z=Z.getNode(k);if(f===1){if(!Z.hasEdge(R,k))Z.addDefaultEdge(R,k,[[k,1],[w,0]])}++z.visitedCount,z.sumPercentCompleted+=f,z.updateReward();const W=z.sumPercentCompleted/z.visitedCount,A=1-W;Z.mapEdges((Y)=>{if(Y.tgt===k)Y.probability[0][1]=W,Y.probability[1][1]=A})}if(!X){++this.lossesInARow;for(let J=0;J<this.lossesInARow;++J){const f=Z.getNode(R).neighbors,k=f.length;if(k===1)break;let z="",W=-1e4;for(let A=0;A<k;++A){const Y=Z.getNode(f[A]).reward;if(Y>W)z=f[A],W=Y}console.log("removing edge:",z),Z.removeEdge(R,z)}}this.playerWonLastRound=X}get(X){const F=FX(Z,0.95,!0,!0,20);if(this.columnsPerLevel=[],this.playerWonLastRound)this.keys=[I(F[R])];else this.keys=[R];for(let $=0;$<X;++$){const J=I(F[this.keys[$]]);if(this.keys.push(J),J===T)break}this.keys.splice(0,1),this.playerIsOnLastLevel=this.keys.includes(T);const q=Array(u).fill(""),Q=this.keys.length;for(let $=0;$<Q;++$){const J=HX[this.keys[$]];this.columnsPerLevel.push(J[0].length);for(let f=0;f<u;++f)q[f]+=J[f]}return q}}class QX extends S{ctx;camera;numCoins;levelDirector;staticEntities;dynamicEntities;constructor(X){super();this.ctx=X,this.camera=new c,this.levelDirector=new qX}onEnter(){this.dynamicEntities=[],this.staticEntities=[],this.numCoins=0,this.dynamicEntities.push(new m(2,12));const X=this.levelDirector.get(3),F=X.length;if(F!==u){console.error("Level should have 15 rows!");return}const q=X[0].length;for(let Q=0;Q<F;++Q){const $=X[Q];if(q!==$.length){console.error(`Every row in the level should have the same number of columns! (${q} !== ${$.length}).`);return}for(let J=0;J<q;++J){const f=$[J];if(f==="X")this.staticEntities.push(new r(J,Q));else if(f==="o")++this.numCoins,this.dynamicEntities.push(new n(J,Q));else if(f==="H")this.dynamicEntities.push(new i(J,Q,q));else if(f==="V")this.dynamicEntities.push(new o(J,Q));else if(f!=="-")console.error(`Unhandled tile type: ${$[J]}`)}}}update(X){let F=this.dynamicEntities.length,q=0;for(;q<F;++q)if(this.dynamicEntities[q].dead)this.dynamicEntities.splice(q,1),--F,--q;const Q=this.staticEntities.length;let $;for(q=0;q<F;++q){const f=this.dynamicEntities[q];f.update(X),f.physicsUpdate(X);for($=q+1;$<F;++$)f.collision(this.dynamicEntities[$]);for($=0;$<Q;++$)f.collision(this.staticEntities[$])}const J=this.dynamicEntities[0];if(J.coinsCollected>=this.numCoins)if(this.levelDirector.playerIsOnLastLevel)this.changeScene=_;else this.changeScene=x;if(J.dead)this.changeScene=x}render(){this.ctx.clearRect(0,0,j,O),this.camera.update(this.dynamicEntities[0].pos.x);let X=this.staticEntities.length,F=0;for(;F<X;++F)this.staticEntities[F].render(this.ctx,this.camera);X=this.dynamicEntities.length;for(F=0;F<X;++F)this.dynamicEntities[F].render(this.ctx,this.camera)}_onExit(){const X=this.dynamicEntities[0];this.levelDirector.update(!X.dead,Math.floor(X.maxColumn))}}class $X extends S{ctx;constructor(X){super();this.ctx=X}onEnter(){this.ctx.clearRect(0,0,j,O),this.ctx.font="30px Arial",this.ctx.fillStyle="white",this.ctx.fillText("You won! Congratulations!",170,O/2)}update(X){}render(){}_onExit(){}}class fX{canvas;ctx;currentScene;sceneManager;constructor(){this.canvas=document.createElement("canvas"),this.canvas.setAttribute("id","canvas"),this.canvas.width=j,this.canvas.height=O,this.ctx=this.canvas.getContext("2d"),document.getElementById("game").appendChild(this.canvas),this.sceneManager=new E,this.sceneManager.registerScene(x,new l(this.ctx)),this.sceneManager.registerScene(M,new QX(this.ctx)),this.sceneManager.registerScene(_,new $X(this.ctx)),this.currentScene=this.sceneManager.getScene(x),this.currentScene.onEnter()}start(){let X=0;const F=(q)=>{const Q=Math.min(0.05,(q-X)/1000);X=q,this.currentScene.update(Q),this.currentScene.render();const $=this.currentScene.changeScene;if($!==void 0)this.currentScene.onExit(),this.currentScene=this.sceneManager.getScene($),this.currentScene.onEnter();window.requestAnimationFrame(F)};window.requestAnimationFrame(F)}}window.addEventListener("load",()=>{v.init(),new fX().start()});
