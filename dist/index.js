class E{scenes={};registerScene(X,F){if(this.scenes[X]===void 0)this.scenes[X]=F;else console.error(`Key "${X}" for scene already exists! Scene not added to SceneManager.`)}getScene(X){return this.scenes[X]}}class I{changeScene;onExit(){this.changeScene=void 0,this._onExit()}}var u="main menu",M="game",_="player won";class l extends I{constructor(){super()}onEnter(){}update(X){this.changeScene=M}render(){}_onExit(){}}var A=720,S=480,b=32,x=15,JX=17,ZX=20,VX=30,BX=0.625,zX=0.9375,kX=31,wX=31,vX=0.96875,UX=0.96875,WX=16,LX=16,jX=0.5,OX=0.5,K=25,G=15,h=0.78125,d=0.46875,j="start",T="end",w="death";class c{startCol=0;endCol=0;offsetX=0;colsPerScreen=Math.ceil(A/b);update(X){const F=X-this.colsPerScreen/2;this.startCol=Math.max(0,Math.floor(F)),this.endCol=this.startCol+this.colsPerScreen,this.offsetX=-F*b+this.startCol*b}columnToScreen(X){return(X-this.startCol)*b+this.offsetX}rowToScreen(X){return X*b}}class O{x;y;constructor(X,F){this.x=X,this.y=F}copy(){return new O(this.x,this.y)}zero(){this.x=0,this.y=0}equals(X){return this.x==X.x&&this.y==X.y}add(X){return new O(this.x+X.x,this.y+X.y)}addInPlace(X){this.x+=X.x,this.y+=X.y}subtract(X){return new O(this.x-X.x,this.y-X.y)}subtractInPlace(X){this.x-=X.x,this.y-=X.y}scalarAdd(X){this.x+=X,this.y+=X}scalarSubtract(X){this.x-=X,this.y-=X}scalarMultiply(X){return new O(this.x*X,this.y*X)}scalarMultiplyInPlace(X){this.x*=X,this.y*=X}dot(X){return this.x*X.x+this.y+X.y}magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y)}}function RX(X,F,f,q){const{x:Q,y:$}=X,J=Q+F.x,B=$+F.y,k=f.x,W=f.y,R=k+q.x,C=W+q.y;return Q<R&&J>k&&$<C&&B>W}class L{pos;size;type;dead=!1;velocity=new O(0,0);gravity=new O(0,100);constructor(X,F,f,q,Q){this.pos=new O(X,F),this.size=new O(f,q),this.type=Q}collision(X){if(RX(this.pos,this.size,X.pos,X.size))this.handleCollision(X),X.handleCollision(this)}physicsUpdate(X){this.velocity.addInPlace(this.gravity.scalarMultiply(X)),this.velocity.y=Math.min(this.velocity.y,30),this.pos.addInPlace(this.velocity.scalarMultiply(X))}}var g=0,H=1,p=2,P=3;var z;(function(V){V[V["LEFT"]=0]="LEFT";V[V["RIGHT"]=1]="RIGHT";V[V["DOWN"]=2]="DOWN";V[V["UP"]=3]="UP";V[V["A"]=4]="A";V[V["D"]=5]="D";V[V["E"]=6]="E";V[V["G"]=7]="G";V[V["H"]=8]="H";V[V["I"]=9]="I";V[V["Q"]=10]="Q";V[V["R"]=11]="R";V[V["S"]=12]="S";V[V["W"]=13]="W";V[V["SPACE"]=14]="SPACE";V[V["ESCAPE"]=15]="ESCAPE";V[V["ENTER"]=16]="ENTER";V[V["SHIFT"]=17]="SHIFT";V[V["INVALID"]=18]="INVALID"})(z||(z={}));class v{static _keys=[];static init(){for(let X=0;X<Object.keys(z).length;++X)v._keys.push(!1);window.addEventListener("keydown",v.onKeyDown),window.addEventListener("keyup",v.onKeyUp)}static isKeyDown(...X){const F=X.length;for(let f=0;f<F;++f)if(v._keys[X[f]])return!0;return!1}static keyStrToKey(X){switch(X){case"Down":case"ArrowDown":return z.DOWN;case"Up":case"ArrowUp":return z.UP;case"Right":case"ArrowRight":return z.RIGHT;case"Left":case"ArrowLeft":return z.LEFT;case" ":case"Space":return z.SPACE;case"Escape":return z.ESCAPE;case"a":case"A":return z.A;case"e":case"E":return z.E;case"s":case"S":return z.S;case"d":case"D":return z.D;case"w":case"W":return z.W;case"r":case"R":return z.R;case"q":case"Q":return z.Q;case"g":case"G":return z.G;case"h":case"H":return z.H;case"i":case"I":return z.I;case"Shift":return z.SHIFT;case"Enter":return z.ENTER;default:return console.warn(`Unhandled key: ${X}.`),z.INVALID}}static onKeyDown(X){const F=v.keyStrToKey(X.key);if(v._keys[F]=!0,F==z.DOWN||F==z.UP||F==z.LEFT||F==z.RIGHT)X.preventDefault();return!1}static onKeyUp(X){return v._keys[v.keyStrToKey(X.key)]=!1,!1}static clear(){for(let X=0;X<v._keys.length;++X)v._keys[X]=!1}}var CX=6,AX=8,IX=0.4;class m extends L{movingRight=!1;movingLeft=!1;moveMod=0;jumpTime=0;squash=1;stretch=1;coinsCollected=0;maxColumn=0;constructor(X,F){super(X,F,BX,zX,g)}update(X){if(this.pos.y>JX){this.dead=!0,console.log("Player fell...");return}if(this.velocity.x=0,v.isKeyDown(z.D,z.RIGHT))this.movingRight=!0,this.velocity.x=CX,this.moveMod=Math.min(AX,this.moveMod+X);if(v.isKeyDown(z.A,z.LEFT))if(this.movingRight)this.movingRight=!1,this.velocity.x=0;else this.movingLeft=!0,this.velocity.x=-CX,this.moveMod=Math.min(AX,this.moveMod+X);if(this.jumpTime<IX&&v.isKeyDown(z.SPACE,z.UP)){if(this.jumpTime===0)this.velocity.y=-15;else if(this.jumpTime<0.2)this.velocity.y-=2;this.squash+=0.01,this.stretch-=0.01,this.jumpTime+=X}else if(this.squash!=this.stretch)this.squash+=0.01,this.stretch-=0.01;this.maxColumn=Math.max(this.pos.x,this.maxColumn)}handleCollision(X){switch(X.type){case H:{const F=this.pos.add(this.size.scalarMultiply(0.5)),f=X.pos.add(X.size.scalarMultiply(0.5)),q=F.subtract(f);this.size.add(X.size).scalarMultiply(0.5);const $=Math.abs(Math.atan(q.y/q.x));if(!($<0.96&&$>0.698)&&Math.abs(q.x/this.size.x)>Math.abs(q.y/this.size.y))if(q.x<0)this.pos.x=X.pos.x-this.size.x;else this.pos.x=X.pos.x+X.size.x;else if(q.y>0)this.pos.y=X.pos.y+X.size.y;else this.pos.y=X.pos.y-this.size.y,this.velocity.y=0,this.jumpTime=0,this.stretch=1.03,this.squash=0.97;break}case p:{++this.coinsCollected;break}case P:{this.dead=!0,console.log("Ran into an enemy! :/");break}default:{console.warn(`Player unhandled collision type: ${X.type}.`);break}}}render(X,F){X.fillStyle="rgba(150,150,255,1)";const f=F.columnToScreen(this.pos.x),q=F.rowToScreen(this.pos.y),Q=VX*this.squash,$=ZX*this.stretch;if(this.movingRight){let J=new Path2D;J.moveTo(f,q),J.lineTo(f-this.moveMod,q+Q),J.lineTo(f+$-this.moveMod,q+Q),J.lineTo(f+$,q),J.closePath(),X.fill(J,"evenodd"),this.movingRight=!1}else if(this.movingLeft){let J=new Path2D;J.moveTo(f,q),J.lineTo(f+this.moveMod,q+Q),J.lineTo(f+$+this.moveMod,q+Q),J.lineTo(f+$,q),J.closePath(),X.fill(J,"evenodd"),this.movingLeft=!1}else X.fillRect(f,q,$,Q)}}class r extends L{constructor(X,F){super(X,F,vX,UX,H)}update(X){}handleCollision(X){}render(X,F){X.strokeStyle="white",X.strokeRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),kX,wX)}}class o extends L{minY;maxY;yMod;constructor(X,F){super(X+0.25,F+0.25,jX,OX,p);this.gravity.y=0,this.yMod=Math.random()*0.5,this.maxY=F+0.3,this.minY=F+0.15,this.velocity.y=this.yMod}update(X){if(this.pos.y>=this.maxY)this.velocity.y=-this.yMod;else if(this.pos.y<=this.minY)this.velocity.y=this.yMod}handleCollision(X){if(X.type===g)this.dead=!0}render(X,F){X.fillStyle="yellow",X.fillRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),WX,LX)}}class i extends L{maxColumns;constructor(X,F,f){super(X+0.25,F+0.25,h,d,P);this.velocity.x=3,this.gravity.y=0,this.maxColumns=f}update(X){if(this.pos.x<0||this.pos.x>this.maxColumns)this.velocity.x*=-1}handleCollision(X){if(X.type===H){const F=this.pos.add(this.size.scalarMultiply(0.5)),f=X.pos.add(X.size.scalarMultiply(0.5)),q=F.subtract(f);if(this.size.add(X.size).scalarMultiply(0.5),Math.abs(q.x/this.size.x)>Math.abs(q.y/this.size.y))if(this.velocity.x*=-1,q.x<0)this.pos.x=X.pos.x-this.size.x;else this.pos.x=X.pos.x+X.size.x}}render(X,F){X.fillStyle="red",X.fillRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),K,G)}}class n extends L{constructor(X,F){super(X,F+0.1,d,h,P);this.velocity.y=3,this.gravity.y=0,this.pos.x+=0.25}update(X){if(this.pos.y<0||this.pos.y>=x)this.velocity.y*=-1}handleCollision(X){if(X.type===H){const F=this.pos.add(this.size.scalarMultiply(0.5)),f=X.pos.add(X.size.scalarMultiply(0.5)),q=F.subtract(f);if(this.size.add(X.size).scalarMultiply(0.5),Math.abs(q.x/this.size.x)<Math.abs(q.y/this.size.y))if(this.velocity.y*=-1,q.y>0)this.pos.y=X.pos.y+X.size.y;else this.pos.y=X.pos.y-this.size.y}}render(X,F){X.fillStyle="red",X.fillRect(F.columnToScreen(this.pos.x),F.rowToScreen(this.pos.y),G,K)}}class t{src;tgt;probability;constructor(X,F,f){this.src=X,this.tgt=F,this.probability=f}}class N{name;reward;utility;isTerminal;neighbors;constructor(X,F,f,q,Q){this.name=X,this.reward=F,this.utility=f,this.isTerminal=q,this.neighbors=Q}}class s{nodes;edges;constructor(){this.nodes={},this.edges={}}getNode(X){return this.nodes[X]}hasNode(X){return X in this.nodes}addNode(X){this.nodes[X.name]=X}addDefaultNode(X,F=1,f=0,q=!1,Q=null){if(Q==null)Q=[];this.nodes[X]=new N(X,F,f,q,Q)}removeNode(X){const F=[];for(let f of Object.values(this.edges)){if(f.src==X||f.tgt==X)F.push(f);const q=f.probability;let Q=-1;for(let k=0;k<q.length;k++){const[W,R]=q[k];if(W==X){Q=k;break}}if(Q==-1)continue;const $=q[Q][1];q.splice(Q,1);const J=q.length,B=$/J;f.probability=q.map(([k,W])=>[k,W+B])}for(let f of F)this.removeEdge(f.src,f.tgt);delete this.nodes[X]}getEdge(X,F){return this.edges[`${X},${F}`]}hasEdge(X,F){return`${X},${F}`in this.edges}addEdge(X){this.edges[`${X.src},${X.tgt}`]=X;const F=this.nodes[X.src].neighbors;if(!F.includes(X.tgt))F.push(X.tgt)}addDefaultEdge(X,F,f=null){if(f==null)f=[[F,1]];this.addEdge(new t(X,F,f))}removeEdge(X,F){const f=this.nodes[X],q=f.neighbors.indexOf(F);f.neighbors.splice(q,1),delete this.edges[`${X},${F}`]}neighbors(X){return this.nodes[X].neighbors}setNodeUtilities(X){for(let[F,f]of Object.entries(X))this.nodes[F].utility=f}utility(X){return this.nodes[X].utility}reward(X){return this.nodes[X].reward}isTerminal(X){return this.nodes[X].isTerminal}mapNodes(X){for(let F of Object.values(this.nodes))X(F)}mapEdges(X){for(let F of Object.values(this.edges))X(F)}}function Y(X){return X[Math.floor(Math.random()*X.length)]}function D(X,F,f,q){const Q=X.getEdge(F,f).probability,$=Q.length;let J=0;for(let B=0;B<$;++B){const[k,W]=Q[B];J+=W*(X.reward(k)+q*X.utility(k))}return J}function y(X,F,f){const q=X.getNode(F);if(q.isTerminal)return 0;const Q=q.neighbors,$=Q.length;let J=(-Infinity);for(let B=0;B<$;++B)J=Math.max(J,D(X,F,Q[B],f));return J}function a(X){for(let F in X.nodes)X.nodes[F].utility=0}function e(X){const F={};for(let f in X.nodes)if(!X.getNode(f).isTerminal)F[f]=[...X.neighbors(f)];return F}function XX(X,F){const f={};for(let q in X.nodes){if(X.getNode(q).isTerminal)continue;let Q=(-Infinity),$=[];for(let J of X.neighbors(q)){const B=D(X,q,J,F);if(B===Q)$.push(J);else if(B>Q)Q=B,$.length=0,$.push(J)}f[q]=$}return f}var SX=function(X,F,f,q){for(let Q=0;Q<q;++Q)for(let $ in X.nodes){const J=X.getNode($);if(!J.isTerminal)J.utility=D(X,$,Y(F[$]),f)}},xX=function(X,F,f,q){for(let Q=0;Q<q;++Q){const $={};for(let J in X.nodes)if(!X.getNode(J).isTerminal)$[J]=D(X,J,Y(F[J]),f);X.setNodeUtilities($)}},uX=function(X,F,f,q){for(let Q=0;Q<q;++Q)for(let $ in X.nodes)X.getNode($).utility=y(X,$,f)},bX=function(X,F,f,q){for(let Q=0;Q<q;++Q){const $={};for(let J in X.nodes)$[J]=y(X,J,f);X.setNodeUtilities($)}},HX=function(X,F,f){let q=!1;for(let Q in X.nodes){if(X.getNode(Q).isTerminal)continue;let $=null,J=(-Infinity);for(let B of X.neighbors(Q)){const k=D(X,Q,B,f);if(k===J);else if(k>J)$=B,J=k}if(Y(F[Q])!==$)F[Q].length=0,F[Q].push($),q=!0}return q};function FX(X,F,f=!1,q=!1,Q=10,$=!0){if($)a(X);const J=e(X);let B;if(f&&q)B=SX;else if(f&&!q)B=xX;else if(!f&&q)B=uX;else B=bX;let k=!0;while(k)B(X,J,F,Q),k=HX(X,J,F);return B(X,J,F,Q),HX(X,J,F),XX(X,F)}class U extends N{visitedCount;sumPercentCompleted;designerReward;playerReward;constructor(X,F,f,q,Q){super(X,F,f,q,Q);this.designerReward=F,this.playerReward=0,this.visitedCount=1,this.sumPercentCompleted=1}updateReward(){this.reward=this.designerReward*this.visitedCount}}var Z=new s;Z.addNode(new U(j,0,0,!1,[]));Z.addNode(new U(w,-1,0,!0,[]));Z.addNode(new U(T,1,0,!0,[]));Z.addNode(new U("4-b",-0.5454545454545454,0,!1,[]));Z.addNode(new U("2-b",-0.7272727272727273,0,!1,[]));Z.addNode(new U("3-b",-0.6363636363636364,0,!1,[]));Z.addNode(new U("4-a",-0.5454545454545454,0,!1,[]));Z.addNode(new U("3-a",-0.6363636363636364,0,!1,[]));Z.addNode(new U("2-a",-0.7272727272727273,0,!1,[]));Z.addNode(new U("1-a",-0.8181818181818182,0,!1,[]));Z.addNode(new U("5-c",-0.45454545454545453,0,!1,[]));Z.addNode(new U("5-a",-0.45454545454545453,0,!1,[]));Z.addNode(new U("5-b",-0.45454545454545453,0,!1,[]));Z.addNode(new U("6-a",-0.2727272727272727,0,!1,[]));Z.addNode(new U("7-a",-0.18181818181818182,0,!1,[]));Z.addDefaultEdge("4-b","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("4-b","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("4-b","5-c",[["5-c",0.99],[w,0.01]]);Z.addDefaultEdge("2-b","3-a",[["3-a",0.99],[w,0.01]]);Z.addDefaultEdge("3-b","4-a",[["4-a",0.99],[w,0.01]]);Z.addDefaultEdge("3-b","4-b",[["4-b",0.99],[w,0.01]]);Z.addDefaultEdge("4-a","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("4-a","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("4-a","5-c",[["5-c",0.99],[w,0.01]]);Z.addDefaultEdge("3-a","4-a",[["4-a",0.99],[w,0.01]]);Z.addDefaultEdge("3-a","4-b",[["4-b",0.99],[w,0.01]]);Z.addDefaultEdge("2-a","3-b",[["3-b",0.99],[w,0.01]]);Z.addDefaultEdge(j,"1-a",[["1-a",0.99],[w,0.01]]);Z.addDefaultEdge("1-a","2-a",[["2-a",0.99],[w,0.01]]);Z.addDefaultEdge("1-a","2-b",[["2-b",0.99],[w,0.01]]);Z.addDefaultEdge("5-c","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-c","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("5-c","6-a",[["6-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-a","5-b",[["5-b",0.99],[w,0.01]]);Z.addDefaultEdge("5-a","5-c",[["5-c",0.99],[w,0.01]]);Z.addDefaultEdge("5-a","6-a",[["6-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-b","5-a",[["5-a",0.99],[w,0.01]]);Z.addDefaultEdge("5-b","6-a",[["6-a",0.99],[w,0.01]]);Z.addDefaultEdge("6-a","7-a",[["7-a",0.99],[w,0.01]]);Z.addDefaultEdge("7-a","end",[["end",0.99],[w,0.01]]);var YX={"4-b":["--------------------XX","--------------------XX","--------------------XX","--------------------XX","--------------------XX","-----------X-H---o--XX","-----------------o--XX","---------o----------XX","-----------XXXXXXX--XX","--------------------XX","-------X------------XX","------XXX-----------XX","-----XXXXX-----------o","----XXXXXXX-----------","XXXXXXXXXXXXXXXX--XXXX"],"2-b":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","-----------o----------","--------------------o-","-----X---H-----X------","XXXXXXXXXXXXXXXXXXXXXX"],"3-b":["----------------------","----------------------","----------------------","----------------------","----------o-----------","----------------------","--------XXXXX---------","--------V---V---------","----------o-----------","----------------------","------XXXXXXXXX-------","----------------------","----------o---------o-","-----X---H-----X------","XXXXXXXXXXXXXXXXXXXXXX"],"4-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------XXX---","-----------------V----","-------X---XX-----V---","------XX------o-V---o-","-----XXX--------------","XXXXXXXX---XXXXXXXXXXX"],"3-a":["----------------------","----------------------","----------------------","----------------------","----------o-----------","----------------------","--------XXXXX---------","----------o-----------","----------------------","-------X-H----X-------","-------XXXXXXXX--XX---","----------------------","-------V--o---V-----o-","----------------------","XXXXXXXXXXXXXXXXXXXXXX"],end:["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----oooooooooooooooooo","XXXXXXXXXXXXXXXXXXXXXX"],"2-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","-------XXXXXXXX-------","----------------------","-------V--o---V-----o-","----------------------","XXXXXXXXXXXXXXXXXXXXXX"],"1-a":["----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","----------------------","--------------X-------","-----o-----o--X------o","XXXXXXXXXXXXXXXXXXXXXX"],"5-c":["0-----------------------------","------------------------------","X---XX------------------------","------------------------------","--------XX--------------------","XX----------------------------","--------XXXXX-----------------","--------Xoo-------------------","XXX-----Xoo----o------------o-","--------X---------------------","--------XXX---XX----XX----XXXX","XXXX--------------------------","------------------------------","------------------------------","XXXXXXXX----------------------"],"5-a":["--------XXXXXXXXXXXXXX--------","-------------------ooX--------","---------------------X--------","---------------------X--------","------------------XXXX--------","------------------X-----------","-----------o--XXXXX-----------","------------------------------","---------XX-----------------o-","------------------------------","--------------XX---XXX----XXXX","------------------------------","----------XX------------------","------------------------------","XXXXXXXX----------------------"],"5-b":["------------------------------","-o----------------------------","------------------------------","XXX---------------------------","------------------------------","-----XXX----------------------","------------------------------","-----------XXX----------------","-o--------------------------o-","------XXX---------------------","XXX-----------------------XXXX","------------XXX-------XX------","------------------XX----------","------------------------------","XXXXXXXX---XXXXX--------------"],"6-a":["----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","----------XXXXXXXXXX----------","-------oo---XXXXXXXX----------","-o----------XXXXXXXX----------","------XXXX--XXXXXXXX----------","--------------o---------------","XXXX--------------------------","-------------XXXX-----------o-","---------------------XX-------","XXXXXXXX-----------------XXXXX"],"7-a":["-------------------V---------------","-----------------o---o-------------","------------X-H------------H--XXX--","-----V------XXXXXXXXXXXXXXXXXXXXX--","--------XX----o--------------------","-----------------------------------","-----------XXXXXX---Ho-------------","-----------------------------------","-------------V------XX--------H----","-----------------------------------","XX--------o------XXXXX----H--------","-----------------------------------","---X----H----H-X-----------------o-","---XXXXXXXXXXXXX-------------------","XXXX--------------------------XXXXX"]};class fX{playerIsOnLastLevel=!1;keys;columnsPerLevel;lossesInARow=0;playerWonLastRound=!1;constructor(){}update(X,F){const f=this.keys.length,q=[];if(X){for(let $=0;$<f;++$)q.push(1);this.lossesInARow=0}else{let $=F;for(let J=0;J<f;++J)if($>this.columnsPerLevel[J])q[J]=1,$-=this.columnsPerLevel[J];else{q[J]=$/this.columnsPerLevel[J];break}}const Q=q.length;for(let $=0;$<Q;++$){const J=q[$],B=this.keys[$],k=Z.getNode(B);if(J===1){if(!Z.hasEdge(j,B))Z.addDefaultEdge(j,B,[[B,1],[w,0]])}++k.visitedCount,k.sumPercentCompleted+=J,k.updateReward();const W=k.sumPercentCompleted/k.visitedCount,R=1-W;Z.mapEdges((C)=>{if(C.tgt===B)C.probability[0][1]=W,C.probability[1][1]=R})}if(!X){++this.lossesInARow;for(let $=0;$<this.lossesInARow;++$){const J=Z.getNode(j).neighbors,B=J.length;if(B===1)break;let k="",W=-1e4;for(let R=0;R<B;++R){const C=Z.getNode(J[R]).reward;if(C>W)k=J[R],W=C}console.log("removing edge:",k),Z.removeEdge(j,k)}}this.playerWonLastRound=X}get(X){const F=FX(Z,0.95,!0,!0,20);if(this.columnsPerLevel=[],this.playerWonLastRound)this.keys=[Y(F[j])];else this.keys=[j];for(let Q=0;Q<X;++Q){const $=Y(F[this.keys[Q]]);if(this.keys.push($),$===T)break}this.keys.splice(0,1),this.playerIsOnLastLevel=this.keys.includes(T);const f=Array(x).fill(""),q=this.keys.length;for(let Q=0;Q<q;++Q){const $=YX[this.keys[Q]];this.columnsPerLevel.push($[0].length);for(let J=0;J<x;++J)f[J]+=$[J]}return f}}class qX extends I{ctx;camera;numCoins;levelDirector;staticEntities;dynamicEntities;constructor(X){super();this.ctx=X,this.camera=new c,this.levelDirector=new fX}onEnter(){this.dynamicEntities=[],this.staticEntities=[],this.numCoins=0,this.dynamicEntities.push(new m(2,12));const X=this.levelDirector.get(3),F=X.length;if(F!==x){console.error("Level should have 15 rows!");return}const f=X[0].length;for(let q=0;q<F;++q){const Q=X[q];if(f!==Q.length){console.error(`Every row in the level should have the same number of columns! (${f} !== ${Q.length}).`);return}for(let $=0;$<f;++$)if(Q[$]==="X")this.staticEntities.push(new r($,q));else if(Q[$]==="o")++this.numCoins,this.dynamicEntities.push(new o($,q));else if(Q[$]==="H")this.dynamicEntities.push(new i($,q,f));else if(Q[$]==="V")this.dynamicEntities.push(new n($,q))}}update(X){let F=this.dynamicEntities.length,f=0;for(;f<F;++f)if(this.dynamicEntities[f].dead)this.dynamicEntities.splice(f,1),--F,--f;const q=this.staticEntities.length;let Q;for(f=0;f<F;++f){const J=this.dynamicEntities[f];J.update(X),J.physicsUpdate(X);for(Q=f+1;Q<F;++Q)J.collision(this.dynamicEntities[Q]);for(Q=0;Q<q;++Q)J.collision(this.staticEntities[Q])}const $=this.dynamicEntities[0];if($.coinsCollected>=this.numCoins)if(this.levelDirector.playerIsOnLastLevel)this.changeScene=_;else this.changeScene=u;if($.dead)this.changeScene=u}render(){this.ctx.clearRect(0,0,A,S),this.camera.update(this.dynamicEntities[0].pos.x);let X=this.staticEntities.length,F=0;for(;F<X;++F)this.staticEntities[F].render(this.ctx,this.camera);X=this.dynamicEntities.length;for(F=0;F<X;++F)this.dynamicEntities[F].render(this.ctx,this.camera)}_onExit(){const X=this.dynamicEntities[0];this.levelDirector.update(!X.dead,Math.floor(X.maxColumn))}}class QX extends I{ctx;constructor(X){super();this.ctx=X}onEnter(){this.ctx.clearRect(0,0,A,S),this.ctx.font="30px Arial",this.ctx.fillStyle="white",this.ctx.fillText("You won! Congratulations!",170,S/2)}update(X){}render(){}_onExit(){}}class $X{canvas;ctx;currentScene;sceneManager;constructor(){this.canvas=document.createElement("canvas"),this.canvas.setAttribute("id","canvas"),this.canvas.width=A,this.canvas.height=S,this.ctx=this.canvas.getContext("2d"),document.getElementById("game").appendChild(this.canvas),this.sceneManager=new E,this.sceneManager.registerScene(u,new l),this.sceneManager.registerScene(M,new qX(this.ctx)),this.sceneManager.registerScene(_,new QX(this.ctx)),this.currentScene=this.sceneManager.getScene(u),this.currentScene.onEnter()}start(){let X=0;const F=(f)=>{const q=Math.min(0.05,(f-X)/1000);X=f,this.currentScene.update(q),this.currentScene.render();const Q=this.currentScene.changeScene;if(Q!==void 0)this.currentScene.onExit(),this.currentScene=this.sceneManager.getScene(Q),this.currentScene.onEnter();window.requestAnimationFrame(F)};window.requestAnimationFrame(F)}}window.addEventListener("load",()=>{v.init(),new $X().start()});
